name: Release

on:
  workflow_dispatch:

env: 
  PLATFORMS:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

jobs:
  prepare:
    name: Prepare Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: release-drafter/release-drafter@v6
        id: release-drafter
        env: 
          GITHUB_TOKEN: ${{ secrets.REPLEX_PAT }}

      - name: Clean tag name
        id: clean-tag
        run: |
          version="${{ steps.release-drafter.outputs.tag_name }}"
          cleaned="${version#v}"
          echo "version=$cleaned" >> $GITHUB_OUTPUT
          
    outputs:
      next_version: ${{ steps.clean-tag.outputs.version }}
      release_id: ${{ steps.release-drafter.outputs.id }}
      upload_url: ${{ steps.release-drafter.outputs.upload_url }}

  update-cargo:
    needs: prepare
    uses: ./.github/workflows/update-cargo.yml
    secrets: inherit
    with:
      version: ${{ needs.prepare.outputs.next_version }}

  build:
    name: Build
    needs: [prepare, update-cargo]
    uses: ./.github/workflows/build-rust.yml
    secrets: inherit
    with:
      platform: 'linux/amd64, linux/arm64, darwin/amd64, darwin/arm64, windows/amd64'
      release: true
      upload_url: ${{ needs.prepare.outputs.upload_url }}

  docker:
    name: Docker
    if: ${{ github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch' }}
    needs: [prepare, build]
    uses: ./.github/workflows/build-docker.yml
    secrets: inherit
    with:
      platform: 'linux/amd64, linux/arm64'
      version: ${{ needs.prepare.outputs.next_version }}
    

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [prepare, build, docker]
    steps:
      - uses: actions/checkout@v4
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          path: ./bin

      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.REPLEX_PAT }}
        with:
          release_id: ${{ needs.prepare.outputs.release_id }}
