name: Pull Request

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]

env: 
  PLATFORMS:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

jobs:
  validate:
    name: Validate PR Title
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.REPLEX_PAT }}

  label:
    name: Label PR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/labeler@v5
        with:
          repo-token: ${{ secrets.REPLEX_PAT }}

  build:
    name: Build - ${{ matrix.platform.release_for }}
    runs-on: ${{ matrix.platform.os }}
    needs: [validate, label]
    outputs:
      platforms: ${{ steps.collect-platforms.outputs.platforms }}

    strategy:
      matrix:
        platform:
          - release_for: x86_64 Linux
            os: ubuntu-22.04
            docker: linux/amd64
            target: x86_64-unknown-linux-gnu
            bin: replex
            name: x86_64-unknown-linux-gnu.tar.gz
            command: build

          - release_for: ARM64 Linux
            os: ubuntu-22.04
            docker: linux/arm64
            target: aarch64-unknown-linux-gnu
            bin: replex
            name: aarch64-unknown-linux-gnu.tar.gz
            command: build
        
          - release_for: x86_64 macOS
            os: macOS-latest
            docker: darwin/amd64
            target: x86_64-apple-darwin
            bin: replex
            name: x86_64-apple-darwin.tar.gz
            command: build

          - release_for: ARM64 macOS
            os: macOS-latest
            target: aarch64-apple-darwin
            bin: replex
            name: aarch64-apple-darwin.tar.gz
            command: build

          - release_for: x86_64 Windows
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: replex.exe
            name: precious-Windows-x86_64.zip
            command: build

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      
      - name: Cache cargo & target directories
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.platform.target }}
          cache-on-failure: true

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: ${{ matrix.platform.command }}
          target: ${{ matrix.platform.target }}
          args: "--locked --release"
  
      - name: Move bin
        shell: bash
        run: |
          mkdir -p bin/${{ matrix.platform.target }}
          mv target/${{ matrix.platform.target }}/release/replex bin/${{ matrix.platform.target }}/${{ matrix.platform.bin }}

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.target }}
          path: bin/${{ matrix.platform.target }}
        
      - name: Collect platform targets
        id: collect-platforms
        run: echo "platforms=${{ matrix.platform.target }}" >> $GITHUB_ENV

  docker:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Aggregate platforms
        id: aggregate-platforms
        run: |
          platforms=$(echo ${{ needs.build.outputs.platforms }} | tr '\n' ',')
          platforms=${platforms%,}
          echo "PLATFORMS=$platforms" >> $GITHUB_ENV

      - name: Bocker build and push
        uses: ./.github/actions/docker-build-and-push
        with:
          platform: ${{ env.PLATFORMS }}
          token: ${{ secrets.REPLEX_PAT }}