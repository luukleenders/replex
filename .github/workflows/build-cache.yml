name: Build Rust cache

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  platform:
    name: Set platform
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set platform
        id: set-platform
        uses: ./.github/actions/set-platform
        with:
          platform: 'linux'
    outputs:
      result: ${{ steps.set-platform.outputs.result }}

  matrix:
    name: Set Matrix
    runs-on: ubuntu-latest
    needs: platform
    steps:
      - uses: actions/checkout@v4
      - name: Set matrix
        id: set-matrix
        uses: ./.github/actions/map-matrix
        with:
          platform: ${{ needs.platform.outputs.result }}
    outputs:
      result: ${{ steps.set-matrix.outputs.matrix }}

  cache:
    name: "Cache: ${{ matrix.platform.release_for }}"
    needs: matrix
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix: ${{ fromJson(needs.matrix.outputs.result) }}
    steps:
      - uses: actions/checkout@v4
      - name: Cache Cargo
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: cargo-acc-${{ matrix.platform.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: cargo-acc-${{ matrix.platform.os }}-
            
      - name: Build binaries
        if: steps.cache.outputs.cache-hit != 'true'
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: ${{ matrix.platform.command }}
          target: ${{ matrix.platform.target }}
