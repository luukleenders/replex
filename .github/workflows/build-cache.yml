name: Build Rust cache

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

permissions:
  contents: read

jobs:
  setup:
    name: Set Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - uses: actions/checkout@v4
      - name: Set matrix
        id: set-matrix
        uses: ./.github/actions/map-matrix
        with:
          platform: "x86_64 Linux, ARM64 Linux, x86_64 macOS, ARM64 macOS, x86_64 Windows"
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}

  cache:
    name: ${{ matrix.platform.release_for }}
    needs: setup
    runs-on: ${{ matrix.platform.os }}
    
    strategy:
      matrix: ${{ fromJson(needs.setup.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v4
      - name: Generate cache key
        id: cache-key
        run: |
          if [ ${{ startsWith(github.ref, 'refs/tags/v') }} ]; then
             echo "cache-key=${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-release" >> $GITHUB_OUTPUT
             echo "restore-keys=${{ runner.os }}-cargo-*-release" >> $GITHUB_OUTPUT
          else
            echo "cache-key=${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-debug" >> $GITHUB_OUTPUT
            echo "restore-keys=${{ runner.os }}-cargo-*-debug" >> $GITHUB_OUTPUT
          fi

      - name: Cache dependencies
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ steps.cache-key.outputs.cache-key }}
          restore-keys: ${{ steps.cache-key.outputs.restore-keys }}

    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}

  rust:
    name: Rust
    needs: cache
    if: needs.cache.outputs.cache-hit != 'true'
    uses: ./.github/workflows/build-rust.yml
    secrets: inherit
    with:
      platform: "x86_64 Linux, ARM64 Linux, x86_64 macOS, ARM64 macOS, x86_64 Windows"