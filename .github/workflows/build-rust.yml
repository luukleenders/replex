name: Build Rust binaries

on:
  workflow_call:
    inputs:
      platform:
        description: Platforms to build for (comma-separated list)
        required: true
        type: string
      release:
        description: Whether to build for release or not
        required: false
        type: boolean

permissions:
  contents: read

jobs:
  matrix:
    name: Set Matrix
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set matrix
        id: set-matrix
        uses: ./.github/actions/map-matrix
        with:
          platform: ${{ inputs.platform }}
          release: ${{ inputs.release }}
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  build:
    name: ${{ matrix.platform.release_for }}
    needs: matrix
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix: ${{ fromJson(needs.matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - name: Get cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: cargo-${{ matrix.platform.profile }}-${{ matrix.platform.release_for }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: cargo-${{ matrix.platform.profile }}-${{ matrix.platform.release_for }}-

      - name: Build binaries
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: ${{ matrix.platform.command }}
          target: ${{ matrix.platform.target }}

      - name: Move binaries
        shell: bash
        run: |
          mkdir -p bin/${{ matrix.platform.target }}
          mv target/${{ matrix.platform.target }}/${{ matrix.platform.profile }}/replex bin/${{ matrix.platform.target }}/${{ matrix.platform.bin }}

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.target }}
          path: bin/${{ matrix.platform.target }}