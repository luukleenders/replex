name: Build Rust binaries

on:
  workflow_call:
    inputs:
      platform:
        description: Platforms to build for (comma-separated list)
        required: true
        type: string
      release:
        description: Whether to build for release or not
        required: false
        type: boolean

permissions:
  contents: read
  
jobs:
  matrix:
    name: Set Matrix
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set matrix
        id: set-matrix
        uses: ./.github/actions/map-matrix
        with:
          platform: ${{ inputs.platform }}
          release: ${{ inputs.release }}
    outputs:
      result: ${{ steps.set-matrix.outputs.result }}

  build:
    name: ${{ matrix.build }}
    needs: matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: 
        include: ${{ fromJson(needs.matrix.outputs.result) }}
    steps:
      - uses: actions/checkout@v4
      - run: rustup toolchain install stable --profile minimal  
      - uses: Swatinem/rust-cache@v2
        id: cache
        with:
          prefix-key: rust-${{ inputs.release == 'true' && 'release' || 'debug' }}-${{ matrix.build }}-
          shared-key: ${{ hashFiles('**/Cargo.lock') }}
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Build binaries
        uses: houseabsolute/actions-rust-cross@v0
        with:
          args: ${{ inputs.release == 'true' && '--locked --release' || ''}}
          target: ${{ matrix.target }}

      - name: Move binaries
        shell: bash
        run: |
          mkdir -p bin/${{ matrix.target }}
          mv ${{ matrix.input }} ${{ matrix.output }}

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: bin/${{ matrix.target }}