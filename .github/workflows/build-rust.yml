name: Build Rust binaries

on:
  workflow_call:
    inputs:
      platform:
        description: Platforms to build for (comma-separated list)
        required: true
        type: string

permissions:
  contents: read

jobs:
  setup:
    name: Setup Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.result }}

    steps:
      - name: Set matrix
        id: set-matrix
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const platforms = "${{ inputs.platform }}"

            const matrix = platforms.split(",").map(platform => {
              if (platform === "x86_64 Linux") {
                return {
                  release_for: "x86_64 Linux",
                  os: "ubuntu-22.04",
                  docker: "linux/amd64",
                  target: "x86_64-unknown-linux-gnu",
                  bin: "replex",
                  name: "x86_64-unknown-linux-gnu.tar.gz",
                  command: "build"
                }
              } else if (platform === "ARM64 Linux") {
                return {
                  release_for: "ARM64 Linux",
                  os: "ubuntu-22.04",
                  docker: "linux/arm64",
                  target: "aarch64-unknown-linux-gnu",
                  bin: "replex",
                  name: "aarch64-unknown-linux-gnu.tar.gz",
                  command: "build"
                }
              } else if (platform === "x86_64 macOS") {
                return {
                  release_for: "x86_64 macOS",
                  os: "macOS-latest",
                  docker: "darwin/amd64",
                  target: "x86_64-apple-darwin",
                  bin: "replex",
                  name: "x86_64-apple-darwin.tar.gz",
                  command: "build"
                }
              } else if (platform === "ARM64 macOS") {
                return {
                  release_for: "ARM64 macOS",
                  os: "macOS-latest",
                  target: "aarch64-apple-darwin",
                  bin: "replex",
                  name: "aarch64-apple-darwin.tar.gz",
                  command: "build"
                }
              } else if (platform === "x86_64 Windows") {
                return {
                  release_for: "x86_64 Windows",
                  os: "windows-latest",
                  target: "x86_64-pc-windows-msvc",
                  bin: "replex.exe",
                  name: "precious-Windows-x86_64.zip",
                  command: "build"
                }
              } else {
                return null
              }
            })
            .filter(platform => platform !== null)

            return JSON.stringify({ platform: matrix })
  build:
    name: ${{ matrix.platform.release_for }}
    needs: setup
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix: ${{ fromJson(needs.setup.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      
      - name: Cache cargo & target directories
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.platform.target }}
          shared-key: ${{ runner.os }}-cargox
          cache-on-failure: true

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: ${{ matrix.platform.command }}
          target: ${{ matrix.platform.target }}
